/*
200366619 - Sierra Buckland
Module 4 Assignment - Layout Task
Happy with: arrangement of photos in the aside
Struggled with: two column layout (it was under class of grid so obviously they wanted the positioning to be in grid but to me a simple responsive two column layout seemed easiest by using flexbox)
Github Link: https://github.com/SierraBuckland-student/CSSassignment-4
*/

/* Original Code */
body {
    background-color: #fff;
    color: #333;
    margin: 0;
    font: 1.2em / 1.2 Arial, Helvetica, sans-serif;
  }

  img {
      max-width: 100%;
      display: block;
  }

  .logo {
    font-size: 200%;
    padding: 50px 20px;
    margin: 0 auto;
    max-width: 980px;
  }

  .grid {
    margin: 0 auto;
    padding: 0 20px;
    max-width: 980px;
  }

  nav {
    background-color: #000;
    padding: .5em;
  }

  nav ul {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  nav a {
    color: #fff;
    text-decoration: none;
    padding: .5em 1em;
  }

  .photos {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .feature {
      width: 200px;
  }

/* New Code I Wrote */

nav {
  width: 100%;
  position: sticky;
  top: 0;
  /* z-index: 9999; */
}

nav ul {
  display: flex;
  justify-content: space-between;
}

img.feature {
  float: left;
  padding: 0px 20px 20px 0px;
}

.grid {
  display: grid;
  /* using percents ensures grid columns are responsive to browser size */
  grid-template-columns: 75% 25%;
}

article {
  padding-right: 4%;
}

.photos {
  display: grid;
  grid-template-columns: 50% 50%;
  grid-gap: 1px;  /* space inbetween grid items - in this case the photos */
}
